/*
 * Created on 10 Aug 2016 ( Time 19:50:10 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.crewguru.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;

import com.crewguru.bean.UserProfile;
import com.crewguru.bean.jpa.UserEntity;
import com.crewguru.bean.jpa.UserProfileEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class UserProfileServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public UserProfileServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'UserProfileEntity' to 'UserProfile'
	 * @param userProfileEntity
	 */
	public UserProfile mapUserProfileEntityToUserProfile(UserProfileEntity userProfileEntity) {
		if(userProfileEntity == null) {
			return null;
		}

		//--- Generic mapping 
		UserProfile userProfile = map(userProfileEntity, UserProfile.class);

		//--- Link mapping ( link to User )
		if(userProfileEntity.getUser() != null) {
			userProfile.setUserId(userProfileEntity.getUser().getUserId());
		}
		return userProfile;
	}
	
	/**
	 * Mapping from 'UserProfile' to 'UserProfileEntity'
	 * @param userProfile
	 * @param userProfileEntity
	 */
	public void mapUserProfileToUserProfileEntity(UserProfile userProfile, UserProfileEntity userProfileEntity) {
		if(userProfile == null) {
			return;
		}

		//--- Generic mapping 
		map(userProfile, userProfileEntity);

		//--- Link mapping ( link : userProfile )
		if( hasLinkToUser(userProfile) ) {
			UserEntity user1 = new UserEntity();
			user1.setUserId( userProfile.getUserId() );
			userProfileEntity.setUser( user1 );
		} else {
			userProfileEntity.setUser( null );
		}

	}
	
	/**
	 * Verify that User id is valid.
	 * @param User User
	 * @return boolean
	 */
	private boolean hasLinkToUser(UserProfile userProfile) {
		if(userProfile.getUserId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}